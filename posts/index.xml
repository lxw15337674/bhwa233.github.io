<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - blog</title>
        <link>/posts/</link>
        <description>All Posts | blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 28 Jul 2022 23:28:42 &#43;0800</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml" /><item>
    <title>深入理解浏览器的缓存机制(引用)</title>
    <link>/posts/browercache/</link>
    <pubDate>Thu, 28 Jul 2022 23:28:42 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/browercache/</guid>
    <description><![CDATA[原文：https://www.jianshu.com/p/54cc04190252 优先级 持久化 命中规则 作用范围 Memory Cache 1 No URL Navigation Service Worker 2 Yes 自定义 Host Disk]]></description>
</item>
<item>
    <title>CookieAndToken</title>
    <link>/posts/cookieandtoken/</link>
    <pubDate>Thu, 28 Jul 2022 22:43:24 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/cookieandtoken/</guid>
    <description><![CDATA[cookie 登陆后后端生成一个sessionid放在cookie中返回给客户端，并且服务端一直记录着这个sessionid，客户端以后每次请求都会带上]]></description>
</item>
<item>
    <title>前端模块化输出</title>
    <link>/posts/module/</link>
    <pubDate>Thu, 28 Jul 2022 21:17:45 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/module/</guid>
    <description><![CDATA[模块化主要是用来抽离公共代码，隔离作用域，避免变量冲突等。 无模块化 CommonJS规范 AMD规范 CMD规范 ES6模块化 适用 服务端 浏览器端 浏览]]></description>
</item>
<item>
    <title>发布订阅模式</title>
    <link>/posts/designmode/subscribe/</link>
    <pubDate>Tue, 26 Jul 2022 23:44:47 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/designmode/subscribe/</guid>
    <description><![CDATA[概念 发布-订阅模式其实是一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。 订阅者（Subsc]]></description>
</item>
<item>
    <title>重绘和回流（Repaint &amp; Reflow）</title>
    <link>/posts/repaintandreflow/</link>
    <pubDate>Tue, 26 Jul 2022 23:29:34 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/repaintandreflow/</guid>
    <description><![CDATA[重绘 DOM样式发生了变化，而不会影响布局时会触发重绘，而不会触发回流。重绘由于DOM位置信息不需要更新，省去了布局过程，因而性能上优于回流 回]]></description>
</item>
<item>
    <title>npm install过程</title>
    <link>/posts/npm_install/</link>
    <pubDate>Tue, 26 Jul 2022 23:27:27 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/npm_install/</guid>
    <description><![CDATA[模块安装过程 查找此模块是否已经在node_modules中安装过，然后再.npm 缓存中查看是否有同版本缓存 如果有缓存，直接使用缓存 没有缓存去]]></description>
</item>
<item>
    <title>三次握手、四次挥手</title>
    <link>/posts/tcp/</link>
    <pubDate>Tue, 26 Jul 2022 23:20:18 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/tcp/</guid>
    <description><![CDATA[一图总结 基本概念 消息类型 描述 ACK acknowledge确认标志，为1表示确认号有效，为0表示报文中不包含确认信息，忽略确认号字段。帮助对方确认]]></description>
</item>
<item>
    <title>Http</title>
    <link>/posts/http/</link>
    <pubDate>Tue, 26 Jul 2022 23:10:17 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/http/</guid>
    <description><![CDATA[概念 HTTP是一种超文本传输协议（Hypertext Transfer Protocol)，HTTP是一个基于TCP实现的应用层协议。一个两点之间传输数据的约]]></description>
</item>
<item>
    <title>js的异步</title>
    <link>/posts/async/</link>
    <pubDate>Tue, 26 Jul 2022 22:26:21 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/async/</guid>
    <description><![CDATA[js是单线程语言，一次只能进行一个任务。js通过事件循环来解决异步任务。 1. 回调函数（callback） setTimeout(() =&gt; { callback() }, 1000) 缺点：回调地狱，不能用 try catch]]></description>
</item>
<item>
    <title> Event Loop（js的事件循环机制）</title>
    <link>/posts/eventloop/</link>
    <pubDate>Tue, 26 Jul 2022 22:12:59 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/eventloop/</guid>
    <description><![CDATA[作用 解决单线程的js对异步任务的问题。 机制 js中的事件触发器维护宏任务和微任务两个队列，微任务的优先级高于宏任务。 每次宏任务执行完后都会执行]]></description>
</item>
</channel>
</rss>
