<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Bhwa233 blog</title>
        <link>/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 23 Aug 2022 09:31:25 &#43;0800</lastBuildDate>
            <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Typescript语法</title>
    <link>/posts/typescript/tool/</link>
    <pubDate>Fri, 01 Jul 2022 17:42:18 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/typescript/tool/</guid>
    <description><![CDATA[高级类型 字面量类型（literal types） 值作为类型。 type foo = &#34;Hello&#34; // foo 的类型就是&#34;hello&#34;,而不是string类型。 foo =&#34;hello&#34;]]></description>
</item>
<item>
    <title>Slate transform API 详细说明</title>
    <link>/posts/richtext/slateApi/</link>
    <pubDate>Sat, 13 Aug 2022 16:04:44 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/richtext/slateApi/</guid>
    <description><![CDATA[通用配置 NodeOptions interface NodeOptions { at?: Location; // 需要操作的节点，默认为选区。 match?: NodeMatch&lt;T&gt;; // 自定义匹配方法。 // 指明Editor.nodes(),以哪种模式遍历slate node tree // &#39;all&#39;:]]></description>
</item>
<item>
    <title>总结2</title>
    <link>/posts/richtext/%E6%80%BB%E7%BB%932/</link>
    <pubDate>Tue, 23 Aug 2022 09:31:25 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/richtext/%E6%80%BB%E7%BB%932/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>富文本总结（一）：前置知识</title>
    <link>/posts/richtext/%E6%80%BB%E7%BB%931/</link>
    <pubDate>Mon, 22 Aug 2022 14:53:52 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/richtext/%E6%80%BB%E7%BB%931/</guid>
    <description><![CDATA[编辑器技术阶段划分 Level 0 代表产品：UEditor、TinyMCE、CKEditor1-4 特点： 依赖了浏览器原生的 contenteditable API 来实现编辑。 以 document.execCommand API 为基础，]]></description>
</item>
<item>
    <title>Promise</title>
    <link>/posts/js/promise/</link>
    <pubDate>Thu, 18 Aug 2022 11:02:44 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/promise/</guid>
    <description><![CDATA[一句话总结Promise 用于解决异步操作结束后的方法执行问题。 诞生原因 最开始解决异步函数的方法是回调函数，将要执行的函数作为参数，传入异步操]]></description>
</item>
<item>
    <title>react hook</title>
    <link>/posts/react/hook/</link>
    <pubDate>Tue, 16 Aug 2022 18:04:37 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/react/hook/</guid>
    <description><![CDATA[Hooks之前的复用方式： mixins 缺点： 方法与属性难以追溯，因为可能存在不同的mixins里。 重名的属性与方法会被覆盖。 渲染属性（render Props) 将]]></description>
</item>
<item>
    <title>Decorators</title>
    <link>/posts/typescript/decorators/</link>
    <pubDate>Tue, 16 Aug 2022 10:48:55 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/typescript/decorators/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>Slate 总结</title>
    <link>/posts/richtext/slate/</link>
    <pubDate>Fri, 12 Aug 2022 11:11:21 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/richtext/slate/</guid>
    <description><![CDATA[定位 path 节点路径，相对于根节点的相对位置路径。 /** * `Path` arrays are a list of indexes that describe a node&#39;s exact position in * a Slate node tree. Although they are usually relative to the root `Editor` * object, they can be relative to any `Node` object. */ export type Path = number[] 例子]]></description>
</item>
<item>
    <title>git创建分支失败</title>
    <link>/posts/git/createBranchfail/</link>
    <pubDate>Thu, 11 Aug 2022 11:01:51 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/git/createBranchfail/</guid>
    <description><![CDATA[报错 Invalid reference name 原因 仓库中已经存在了一个分支名称为 {branch} 的分支，就不能在新建一个 {branch}/{subName} 这样的额分支，比如仓库中有个分支叫 bugfix 那么再新建一个 bugfix/fix1 这样的分支就会报]]></description>
</item>
<item>
    <title>Flux、Redux、Vuex、MobX 状态管理</title>
    <link>/posts/react/store/</link>
    <pubDate>Tue, 09 Aug 2022 19:25:58 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/react/store/</guid>
    <description><![CDATA[状态管理的解决思路是：把组件之间需要共享的状态抽取出来，遵循特定的约定，统一来管理，让状态的变化可以预测。 store模式 简单模式 把状态存到一]]></description>
</item>
</channel>
</rss>
