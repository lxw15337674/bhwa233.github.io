<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Bhwa233 blog</title>
        <link>/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 04 Sep 2022 16:57:06 &#43;0800</lastBuildDate>
            <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Hugo lovelt的搜索坑</title>
    <link>/posts/hugo/</link>
    <pubDate>Sat, 06 Aug 2022 19:30:28 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/hugo/</guid>
    <description><![CDATA[lovelt主题的搜索，提供了Lunr.js 、algolia, 两个搜索引擎，但是都很麻烦。 首先lunr简单，但不支持中文检索，中文分词依赖库]]></description>
</item>
<item>
    <title>Typescript语法</title>
    <link>/posts/typescript/tool/</link>
    <pubDate>Fri, 01 Jul 2022 17:42:18 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/typescript/tool/</guid>
    <description><![CDATA[高级类型 字面量类型（literal types） 值作为类型。 type foo = &#34;Hello&#34; // foo 的类型就是&#34;hello&#34;,而不是string类型。 foo =&#34;hello&#34;]]></description>
</item>
<item>
    <title>Slate transform API 详细说明</title>
    <link>/posts/richtext/slateApi/</link>
    <pubDate>Sat, 13 Aug 2022 16:04:44 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/richtext/slateApi/</guid>
    <description><![CDATA[通用配置 NodeOptions interface NodeOptions { at?: Location; // 需要操作的节点，默认为选区。 match?: NodeMatch&lt;T&gt;; // 自定义匹配方法。 // 指明Editor.nodes(),以哪种模式遍历slate node tree // &#39;all&#39;:]]></description>
</item>
<item>
    <title>Hook原理</title>
    <link>/posts/react/hook%E5%8E%9F%E7%90%86/</link>
    <pubDate>Sun, 04 Sep 2022 16:57:06 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/react/hook%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[作者：宫秋 链接：https://juejin.cn/post/7119102104337121316 来源：稀土掘金 原理 hooks 的实现就是基于 fiber 的，]]></description>
</item>
<item>
    <title>AOP思想</title>
    <link>/posts/AOP/</link>
    <pubDate>Sun, 04 Sep 2022 14:52:22 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/AOP/</guid>
    <description><![CDATA[基本思想 面向切面编程，把一些跟核心业务逻辑无关的功能抽离出来，再通过动态组织的方式掺入业务逻辑模块中。 let func = ()=&gt;{ //业务逻辑 console.log(&#39;func&#39;); } func = func.before(()=&gt;{ console.log(&#39;before&#39;); }).after(()=&gt;{ console.log(&#39;after&#39;); })]]></description>
</item>
<item>
    <title>浅拷贝与深拷贝</title>
    <link>/posts/js/%E6%8B%B7%E8%B4%9D/</link>
    <pubDate>Sun, 04 Sep 2022 14:05:12 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/%E6%8B%B7%E8%B4%9D/</guid>
    <description><![CDATA[总结 浅拷贝：只拷贝了栈内存 深拷贝：拷贝栈内存和堆内存。 浅拷贝 手写， 用for in遍历，但不支持Symbol属性的处理。 用Object.keys]]></description>
</item>
<item>
    <title>this指向问题</title>
    <link>/posts/js/this/</link>
    <pubDate>Sat, 03 Sep 2022 16:15:11 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/this/</guid>
    <description><![CDATA[总结 this始终指向调用它的那个对象。 场景： 给元素的某个行为绑定方法，当事件行为触发，方法中的this是元素本身。 构造函数体中的this是当]]></description>
</item>
<item>
    <title>js中三类For循环</title>
    <link>/posts/js/for%E5%BE%AA%E7%8E%AF/</link>
    <pubDate>Sat, 03 Sep 2022 15:39:17 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/for%E5%BE%AA%E7%8E%AF/</guid>
    <description><![CDATA[总结 性能对比： for 与 while 基础 var 循环的时候，两者性能差不多 let arr = new Array(9999999).fill(0); console.time(&#39;for&#39;) for(var i = 0; i &lt; arr.length; i++) {} console.timeEnd(&#39;for&#39;) // for: 8.13818359375 ms console.time(&#39;while&#39;) var i = 0; while(i &lt; arr.length) { i++; } console.timeEnd(&#39;while&#39;) // while: 8.020751953125 ms var 没有块级作用域]]></description>
</item>
<item>
    <title>js的继承</title>
    <link>/posts/js/%E7%BB%A7%E6%89%BF/</link>
    <pubDate>Sat, 27 Aug 2022 17:05:53 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/%E7%BB%A7%E6%89%BF/</guid>
    <description><![CDATA[原型链继承 原理 让子类的原型对象指向父类实例，当子类实例找不到对应的属性和方法时，就会往它的原型对象，也就是父类实例上找，从而实现对父类的属性]]></description>
</item>
<item>
    <title>DOM事件</title>
    <link>/posts/js/%E4%BA%8B%E4%BB%B6%E6%B5%81/</link>
    <pubDate>Tue, 23 Aug 2022 22:33:57 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/js/%E4%BA%8B%E4%BB%B6%E6%B5%81/</guid>
    <description><![CDATA[事件流 事件两种模型：捕获和冒泡 流程： 捕获 目标阶段 冒泡 事件捕获流程 从上到下 window -&gt; document -&gt; html -&gt; body-&gt;元素 Event 对象 event.preventDefault() event.stopPropagation() event.stopImmediatePropagation() event.target event.currentTarget 函数 作用 event.stopImmediatePropagation() 能阻止父]]></description>
</item>
</channel>
</rss>
