<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>blog</title>
        <link>/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 07 Jul 2022 15:25:23 &#43;0800</lastBuildDate>
            <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>包管理发展史</title>
    <link>/posts/node_modules/</link>
    <pubDate>Thu, 07 Jul 2022 15:25:23 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/node_modules/</guid>
    <description><![CDATA[npm 2010年npm发布。 嵌套结构 主依赖在 node_modules 下，子依赖嵌套在主依赖的 node_modules 中。但会造成依赖地狱。 npm最开始的 node_modules 采用嵌套结构。比如项目依赖了 A 和 C]]></description>
</item>
<item>
    <title>pnpm</title>
    <link>/posts/pnpm/</link>
    <pubDate>Thu, 07 Jul 2022 11:35:22 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/pnpm/</guid>
    <description><![CDATA[为什么使用pnpm？ 解决两个问题： 相同依赖多次保存，占用磁盘空间安装慢。 多个项目依赖一个相同的包，例如react@17.0.13 ，用npm或]]></description>
</item>
<item>
    <title>语法化版本</title>
    <link>/posts/aboutversion/</link>
    <pubDate>Wed, 06 Jul 2022 15:29:43 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/aboutversion/</guid>
    <description><![CDATA[版本一般被分解major.minor.patch，例如3.14.1, 0.42.0, 2.7.18。 major主版本号：做了不兼容的 API 修改。 minor次版本]]></description>
</item>
<item>
    <title>Typescript关键字及工具函数</title>
    <link>/posts/tstype/</link>
    <pubDate>Fri, 01 Jul 2022 17:42:18 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/tstype/</guid>
    <description><![CDATA[record&lt;K,T&gt; 以 typeof 格式快速创建一个类型，此类型包含一组指定的属性且都是必填。 type Coord = Record&lt;&#39;x&#39; | &#39;y&#39;, number&gt;; //等同于 type Coord = { x: number; y: number; } Required 让属性都变成必选 type A = {a?:number, b?:string} type A1 =]]></description>
</item>
<item>
    <title>UseStore</title>
    <link>/posts/usestore/</link>
    <pubDate>Fri, 01 Jul 2022 15:11:19 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/usestore/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>LifeIsNotShort</title>
    <link>/posts/lifeisnotshort/</link>
    <pubDate>Fri, 01 Jul 2022 11:38:11 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/lifeisnotshort/</guid>
    <description><![CDATA[原文链接 最不可思议的事情是你不会让任何一个人偷走你的财产，却总让人偷走你无比宝贵的时间。 如果你想要学习如何过上好日子，没有比塞內卡更好的案例]]></description>
</item>
<item>
    <title>云计算</title>
    <link>/posts/cloudcomputing/</link>
    <pubDate>Thu, 30 Jun 2022 20:11:35 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/cloudcomputing/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>node-sass报错解决</title>
    <link>/posts/node-sass/</link>
    <pubDate>Thu, 30 Jun 2022 20:08:22 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/node-sass/</guid>
    <description><![CDATA[node-sass不仅下载编译慢，在window环境下总会报错。 解决办法 使用dart-sass替代node-sass npm install node-sass@npm:dart-sass 这样会写到lock]]></description>
</item>
<item>
    <title>关于清单表格项目反思</title>
    <link>/posts/aboutproject/</link>
    <pubDate>Thu, 30 Jun 2022 20:06:35 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/aboutproject/</guid>
    <description><![CDATA[前言 看了下gitlab的提交记录，从11月加入璇玑清单组开始，到现在已经4个月的时间，到昨天 （2022/3/11）我疲于应付发布前的bug，]]></description>
</item>
<item>
    <title>slate.js踩坑记录</title>
    <link>/posts/slate.js/</link>
    <pubDate>Thu, 30 Jun 2022 19:58:01 &#43;0800</pubDate>
    <author>Bhwa233</author>
    <guid>/posts/slate.js/</guid>
    <description><![CDATA[基本没有实践文档 因为slate在0.5版本进行了break改动，插件基本重构，所以基本没有可参考文档。 解决方法 参考slate的Demo代码和]]></description>
</item>
</channel>
</rss>
